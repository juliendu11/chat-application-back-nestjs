# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input AddRoomMessageInput {
  id: String!
  message: String!
}

type AddRoomMessageOuput {
  message: String!
  result: Boolean!
  value: Message
}

type CommonOutput {
  message: String!
  result: Boolean!
}

input ConfirmMemberInput {
  email: String!
  token: String!
}

type Conversation {
  _id: String!
  last_message: Message
  members: [Member!]!
  messages: [Message!]!
}

type ConversationNewMessageOutput {
  _id: String!
  last_message: Message
  members: [Member!]!
}

input ConversationSendMessageInput {
  memberId: String!
  message: String!
}

type ConversationSendMessageOutput {
  message: String!
  result: Boolean!
}

type ConversationsOutput {
  _id: String!
  last_message: Message
  members: [Member!]!
}

input CreateRoomInput {
  isPrivate: Boolean!
  name: String!
}

type CreateRoomOutput {
  message: String!
  result: Boolean!
  value: Room
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ForgotPassword {
  date: String
  expiration_date: String
  token: String!
}

input ForgotPasswordInput {
  email: String!
}

input GetConversationMessageInput {
  id: String!
  limit: Float!
  skip: Float!
}

type GetConversationMessageOutput {
  message: String!
  result: Boolean!
  value: GetConversationMessageValue!
}

type GetConversationMessageValue {
  messages: [Message!]!
  moreAvailable: Boolean!
  pageAvailable: Float!
}

input GetRoomMessageInput {
  id: String!
  limit: Float!
  skip: Float!
}

type GetRoomMessageOuput {
  message: String!
  result: Boolean!
  value: GetRoomMessageValue!
}

type GetRoomMessageValue {
  messages: [Message!]!
  moreAvailable: Boolean!
  pageAvailable: Float!
}

type GetRoomOuput {
  message: String!
  result: Boolean!
  value: Room!
}

input LoginMemberInput {
  id: String!
  password: String!
}

type LoginMemberOutput {
  message: String!
  result: Boolean!
  token: String!
}

type Member {
  _id: String!
  confirmed: Boolean!
  conversations: [Conversation!]!
  email: String!
  forgot_password: ForgotPassword!
  isOnline: Boolean!
  password: String!
  profilPic: String
  registration_information: RegistrationInformation!
  rooms: [Room!]!
  username: String!
}

type MemberOnlineOutput {
  message: String!
  result: Boolean!
  values: [MemberOnlineOutputUser!]!
}

type MemberOnlineOutputUser {
  _id: String!
  email: String!
  profilPic: String!
  username: String!
}

type MembersInfoOutput {
  members: [Member!]!
  message: String!
  result: Boolean!
}

input MembersUpdateProfilPicInput {
  filesSelected: Upload!
}

type Message {
  date: DateTime
  message: String!
  user: Member!
}

type Mutation {
  addRoomMessage(addRoomMessageInput: AddRoomMessageInput!): AddRoomMessageOuput!
  confirmAccount(confirmAccountInput: ConfirmMemberInput!): CommonOutput!
  conversationSendMessage(conversationSendMessageInput: ConversationSendMessageInput!): ConversationSendMessageOutput!
  createRoom(createRoomInput: CreateRoomInput!): CreateRoomOutput!
  forgotPassword(forgotPasswordInput: ForgotPasswordInput!): CommonOutput!
  login(loginMemberInput: LoginMemberInput!): LoginMemberOutput!
  membersUpdateProfilPic(membersUpdateProfilPicInput: MembersUpdateProfilPicInput!): CommonOutput!
  register(registerMemberInput: RegisterMemberInput!): RegisterMemberOutput!
  removeRoom(id: String!): CommonOutput!
  resetPassword(resetPasswordInput: ResetPasswordInput!): CommonOutput!
}

type Query {
  conversationMessages(getConversationMessageInput: GetConversationMessageInput!): GetConversationMessageOutput!
  conversations: [ConversationsOutput!]!
  membersInfo: MembersInfoOutput!
  membersOnline: MemberOnlineOutput!
  myInformation: Member!
  room(id: String!): GetRoomOuput!
  roomMessage(getRoomMessageInput: GetRoomMessageInput!): GetRoomMessageOuput!
  rooms: [Room!]!
  sayHello: String!
}

input RegisterMemberInput {
  email: String!
  password: String!
  username: String!
}

type RegisterMemberOutput {
  message: String!
  result: Boolean!
}

type RegistrationInformation {
  date: String
  expiration_date: String
  token: String!
}

input ResetPasswordInput {
  email: String!
  newPassword: String!
  token: String!
}

type Room {
  _id: String!
  isPrivate: Boolean!
  last_message: Message
  member: Member!
  messages: [Message!]!
  name: String!
}

type RoomMessageAddedOuput {
  id: String!
  message: Message!
}

type Subscription {
  conversationNewMessage: ConversationNewMessageOutput!
  memberOffline: MemberOnlineOutputUser!
  memberOnline: MemberOnlineOutputUser!
  roomAdded: Room!
  roomMessageAdded: RoomMessageAddedOuput!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload
