# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CommonOutput {
  message: String!
  result: Boolean!
}

type Conversation {
  _id: String!
  last_message: Message
  members: [Member!]!
  messages: [Message!]!
}

input ConversationMessageInput {
  id: String!
  limit: Float!
  skip: Float!
}

type ConversationNewMessageOutput {
  _id: String!
  last_message: Message
  members: [Member!]!
}

input ConversationSendMessageInput {
  memberId: String!
  message: String!
}

type ConversationSendMessageOutput {
  message: String!
  result: Boolean!
}

type ConversationsOutput {
  message: String!
  result: Boolean!
  value: [ConversationsOutputValue!]!
}

type ConversationsOutputValue {
  _id: String!
  last_message: Message
  members: [Member!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ForgotPassword {
  date: String
  expiration_date: String
  token: String!
}

type GetConversationMessageOutput {
  message: String!
  result: Boolean!
  value: GetConversationMessageValue!
}

type GetConversationMessageValue {
  messages: [Message!]!
  moreAvailable: Boolean!
  pageAvailable: Float!
}

type GetRoomMessageValue {
  messages: [Message!]!
  moreAvailable: Boolean!
  pageAvailable: Float!
}

type Member {
  _id: String!
  confirmed: Boolean!
  conversations: [Conversation!]!
  email: String!
  forgot_password: ForgotPassword!
  isOnline: Boolean!
  password: String!
  profilPic: String
  registration_information: RegistrationInformation!
  rooms: [Room!]!
  username: String!
}

input MemberConfirmMemberInput {
  email: String!
  token: String!
}

input MemberForgotPasswordInput {
  email: String!
}

input MemberLoginInput {
  id: String!
  password: String!
}

type MemberLoginOutput {
  message: String!
  result: Boolean!
  token: String!
}

type MemberMyInformationOutput {
  message: String!
  result: Boolean!
  value: Member!
}

type MemberOnlineOutput {
  message: String!
  result: Boolean!
  values: [MemberOnlineOutputUser!]!
}

type MemberOnlineOutputUser {
  _id: String!
  email: String!
  profilPic: String!
  username: String!
}

type MemberRefreshTokenOutput {
  message: String!
  newToken: String
  result: Boolean!
}

input MemberRegisterInput {
  email: String!
  password: String!
  username: String!
}

type MemberRegisterOutput {
  message: String!
  result: Boolean!
}

input MemberResetPasswordInput {
  email: String!
  newPassword: String!
  token: String!
}

type MembersInfoOutput {
  members: [Member!]!
  message: String!
  result: Boolean!
}

input MembersUpdateProfilPicInput {
  filesSelected: Upload!
}

type Message {
  date: DateTime
  message: String!
  user: Member!
}

type Mutation {
  conversationSendMessage(conversationSendMessageInput: ConversationSendMessageInput!): ConversationSendMessageOutput!
  memberConfirmAccount(memberConfirmAccountInput: MemberConfirmMemberInput!): CommonOutput!
  memberForgotPassword(memberForgotPasswordInput: MemberForgotPasswordInput!): CommonOutput!
  memberLogin(memberLoginInput: MemberLoginInput!): MemberLoginOutput!
  memberRegister(memberRegisterMemberInput: MemberRegisterInput!): MemberRegisterOutput!
  memberResetPassword(memberResetPasswordInput: MemberResetPasswordInput!): CommonOutput!
  membersUpdateProfilPic(membersUpdateProfilPicInput: MembersUpdateProfilPicInput!): CommonOutput!
  roomAddMessage(roomAddMessageInput: RoomAddMessageInput!): RoomAddMessageOutput!
  roomCreate(roomCreateInput: RoomCreateInput!): RoomCreateOutput!
}

type Query {
  conversationMessages(conversationMessageInput: ConversationMessageInput!): GetConversationMessageOutput!
  conversations: ConversationsOutput!
  memberMyInformation: MemberMyInformationOutput!
  memberRefreshToken: MemberRefreshTokenOutput!
  membersInfo: MembersInfoOutput!
  membersOnline: MemberOnlineOutput!
  room(roomGetInput: RoomGetInput!): RoomGetOutput!
  roomMessage(roomGetMessageInput: RoomGetMessageInput!): RoomGetMessageOuput!
  rooms: RoomGetsOutput!
  sayHello: String!
}

type RegistrationInformation {
  date: String
  expiration_date: String
  token: String!
}

type Room {
  _id: String!
  isPrivate: Boolean!
  last_message: Message
  member: Member!
  messages: [Message!]!
  name: String!
}

input RoomAddMessageInput {
  id: String!
  message: String!
}

type RoomAddMessageOutput {
  message: String!
  result: Boolean!
  value: Message
}

input RoomCreateInput {
  isPrivate: Boolean!
  name: String!
}

type RoomCreateOutput {
  message: String!
  result: Boolean!
  value: Room
}

input RoomGetInput {
  id: String!
}

input RoomGetMessageInput {
  id: String!
  limit: Float!
  skip: Float!
}

type RoomGetMessageOuput {
  message: String!
  result: Boolean!
  value: GetRoomMessageValue!
}

type RoomGetOutput {
  message: String!
  result: Boolean!
  value: Room!
}

type RoomGetsOutput {
  message: String!
  result: Boolean!
  value: [Room!]!
}

type RoomMessageAddedOuput {
  id: String!
  message: Message!
}

type Subscription {
  conversationNewMessage: ConversationNewMessageOutput!
  memberOffline: MemberOnlineOutputUser!
  memberOnline: MemberOnlineOutputUser!
  roomAdded: Room!
  roomMessageAdded: RoomMessageAddedOuput!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload
